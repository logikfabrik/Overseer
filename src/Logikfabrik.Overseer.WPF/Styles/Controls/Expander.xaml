<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:Logikfabrik.Overseer.WPF.Styles"
                    xmlns:c="clr-namespace:Logikfabrik.Overseer.WPF.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Resources/FocusVisualResources.xaml" />
        <ResourceDictionary Source="../Resources/IconResources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="Expander.Static.Background" 
                     Color="{x:Static s:CommonColors.ControlStaticBackground}" />
    <SolidColorBrush x:Key="Expander.Static.Foreground" 
                     Color="{x:Static s:CommonColors.ControlStaticForeground}" />
    <SolidColorBrush x:Key="Expander.Static.Border" 
                     Color="{x:Static s:CommonColors.ControlStaticBorder}" />
    <SolidColorBrush x:Key="Expander.MouseOver.Background" 
                     Color="{x:Static s:CommonColors.ControlMouseOverBackground}" />
    <SolidColorBrush x:Key="Expander.MouseOver.Foreground" 
                     Color="{x:Static s:CommonColors.ControlMouseOverForeground}" />
    <SolidColorBrush x:Key="Expander.MouseOver.Border" 
                     Color="{x:Static s:CommonColors.ControlMouseOverBorder}" />
    <SolidColorBrush x:Key="Expander.Pressed.Background" 
                     Color="{x:Static s:CommonColors.ControlPressedBackground}" />
    <SolidColorBrush x:Key="Expander.Pressed.Foreground" 
                     Color="{x:Static s:CommonColors.ControlPressedForeground}" />
    <SolidColorBrush x:Key="Expander.Pressed.Border" 
                     Color="{x:Static s:CommonColors.ControlPressedBorder}" />
    <SolidColorBrush x:Key="Expander.Disabled.Background" 
                     Color="{x:Static s:CommonColors.ControlDisabledBackground}" />
    <SolidColorBrush x:Key="Expander.Disabled.Foreground" 
                     Color="{x:Static s:CommonColors.ControlDisabledForeground}" />
    <SolidColorBrush x:Key="Expander.Disabled.Border" 
                     Color="{x:Static s:CommonColors.ControlDisabledBorder}" />
    <Style x:Key="ExpanderToggleButtonDefaultStyle" 
           TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" 
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" 
                Value="{StaticResource Expander.Static.Background}" />
        <Setter Property="Foreground" 
                Value="{StaticResource Expander.Static.Foreground}" />
        <Setter Property="BorderBrush" 
                Value="{StaticResource Expander.Static.Border}" />
        <Setter Property="BorderThickness" 
                Value="1" />
        <Setter Property="HorizontalContentAlignment" 
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment" 
                Value="Stretch" />
        <Setter Property="Padding" 
                Value="10 5 10 5" />
        <Setter Property="FontSize" 
                Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="PART_Border" 
                                Grid.Column="0"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" >
                            <c:Icon x:Name="Icon"
                                    Foreground="{TemplateBinding Foreground}"
                                    Data="{StaticResource IconArrowUp}" />
                        </Border>
                        <ContentPresenter x:Name="PART_ContentPresenter" 
                                          Grid.Column="1"
                                          Focusable="False" 
                                          RecognizesAccessKey="True" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" 
                                    Value="True">
                            <Setter Property="Data" 
                                    TargetName="Icon"
                                    Value="{StaticResource IconArrowDown}">
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" 
                                    Value="True">
                            <Setter Property="Background" 
                                    TargetName="PART_Border" 
                                    Value="{StaticResource Expander.MouseOver.Background}" />
                            <Setter Property="TextElement.Foreground" 
                                    TargetName="PART_ContentPresenter" 
                                    Value="{StaticResource Expander.MouseOver.Foreground}" />
                            <Setter Property="BorderBrush" 
                                    TargetName="PART_Border" 
                                    Value="{StaticResource Expander.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" 
                                    Value="True">
                            <Setter Property="Background" 
                                    TargetName="PART_Border" 
                                    Value="{StaticResource Expander.Pressed.Background}" />
                            <Setter Property="TextElement.Foreground" 
                                    TargetName="PART_ContentPresenter" 
                                    Value="{StaticResource Expander.Pressed.Foreground}" />
                            <Setter Property="BorderBrush" 
                                    TargetName="PART_Border" 
                                    Value="{StaticResource Expander.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" 
                                    Value="False">
                            <Setter Property="Background" 
                                    TargetName="PART_Border" 
                                    Value="{StaticResource Expander.Disabled.Background}" />
                            <Setter Property="TextElement.Foreground" 
                                    TargetName="PART_ContentPresenter" 
                                    Value="{StaticResource Expander.Disabled.Foreground}" />
                            <Setter Property="BorderBrush" 
                                    TargetName="PART_Border" 
                                    Value="{StaticResource Expander.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDefaultStyle" 
           TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <StackPanel>
                        <ToggleButton ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                      Content="{TemplateBinding Header}" 
                                      IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ExpanderToggleButtonDefaultStyle}" />
                        <ContentPresenter x:Name="PART_ContentPresenter" 
                                          Focusable="False" 
                                          Visibility="Collapsed" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" 
                                 Value="True">
                            <Setter Property="Visibility" 
                                    TargetName="PART_ContentPresenter" 
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>